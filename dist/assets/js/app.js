/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/assets/js/app.js":
/*!******************************!*\
  !*** ./src/assets/js/app.js ***!
  \******************************/
/***/ (function() {

eval("const accordionEvent = () => {\n  if (!document.querySelector('.js-accordion')) return;\n\n  const accordionTitle = document.querySelectorAll('.js-accordion-title');\n\n  accordionTitle.forEach((title) => {\n    title.addEventListener('click', () => {\n      if (!title.closest('.js-accordion')) return;\n\n      const isActive = title.closest('.js-accordion-item').classList.contains('active');\n      const accordionBody = title.nextElementSibling;\n\n      const activeEl = title.closest('.js-accordion').querySelector('.active');\n\n      if (activeEl) {\n        activeEl.classList.remove('active');\n        activeEl.querySelector('.js-accordion-body').style.maxHeight = null;\n      }\n\n      if (!isActive) {\n        title.closest('.js-accordion-item').classList.add('active');\n  \n        if (accordionBody.style.maxHeight) {\n          accordionBody.style.maxHeight = null;\n        } else {\n          accordionBody.style.maxHeight = accordionBody.scrollHeight + 'px';\n        }\n      }\n    });\n  });\n};\n\nconst customSelect = () => {\n  var x, i, j, l, ll, selElmnt, a, b, c;\n\n  x = document.getElementsByClassName('js-select');\n  l = x.length;\n\n  for (i = 0; i < l; i++) {\n    selElmnt = x[i].getElementsByTagName('select')[0];\n    ll = selElmnt.length;\n    \n    a = document.createElement('DIV');\n    a.setAttribute('class', 'select-selected');\n    a.innerHTML = selElmnt.options[selElmnt.selectedIndex].innerHTML;\n    x[i].appendChild(a);\n    \n    b = document.createElement('DIV');\n    b.setAttribute('class', 'select-items select-hide');\n\n    for (j = 1; j < ll; j++) {\n      c = document.createElement('DIV');\n      c.innerHTML = selElmnt.options[j].innerHTML;\n      c.addEventListener('click', function(e) {\n          var y, i, k, s, h, sl, yl;\n          s = this.parentNode.parentNode.getElementsByTagName('select')[0];\n          sl = s.length;\n          h = this.parentNode.previousSibling;\n\n          for (i = 0; i < sl; i++) {\n            if (s.options[i].innerHTML == this.innerHTML) {\n              s.selectedIndex = i;\n              h.innerHTML = this.innerHTML;\n              y = this.parentNode.getElementsByClassName('same-as-selected');\n              yl = y.length;\n              for (k = 0; k < yl; k++) {\n                y[k].removeAttribute('class');\n              }\n              this.setAttribute('class', 'same-as-selected');\n              break;\n            }\n          }\n          h.click();\n      });\n      b.appendChild(c);\n    }\n    x[i].appendChild(b);\n    a.addEventListener('click', function(e) {\n        e.stopPropagation();\n        closeAllSelect(this);\n        this.nextSibling.classList.toggle('select-hide');\n        this.classList.toggle('select-arrow-active');\n      });\n  }\n  function closeAllSelect(elmnt) {\n    var x, y, i, xl, yl, arrNo = [];\n\n    x = document.getElementsByClassName('select-items');\n    y = document.getElementsByClassName('select-selected');\n    xl = x.length;\n    yl = y.length;\n\n    for (i = 0; i < yl; i++) {\n      if (elmnt == y[i]) {\n        arrNo.push(i)\n      } else {\n        y[i].classList.remove('select-arrow-active');\n      }\n    }\n\n    for (i = 0; i < xl; i++) {\n      if (arrNo.indexOf(i)) {\n        x[i].classList.add('select-hide');\n      }\n    }\n  }\n\n  document.addEventListener('click', closeAllSelect);\n};\n\nconst mmenu = () => {\n  const mmenuWrapper = document.querySelector('.mmenu');\n  const openButton = document.querySelector('.js-open-menu');\n  const closeButton = document.querySelector('.js-close-menu');\n\n  openButton.addEventListener('click', () => {\n    mmenuWrapper.classList.add('active');\n  });\n\n  closeButton.addEventListener('click', () => {\n    mmenuWrapper.classList.remove('active');\n  });\n};\n\nconst lazy = () => {\n  var lazyImages = [].slice.call(document.querySelectorAll('*[data-src]'));\n\n  if ('IntersectionObserver' in window) {\n    let lazyImageObserver = new IntersectionObserver(function(entries, observer) {\n      entries.forEach(function(entry) {\n        if (entry.isIntersecting) {\n          let lazyImage = entry.target;\n          lazyImage.src = lazyImage.dataset.src;\n          lazyImage.classList.add('loaded');\n          lazyImageObserver.unobserve(lazyImage);\n        }\n      });\n    }, {\n      rootMargin: '0px 0px 500px 0px',\n      threshold: 0\n    });\n\n    lazyImages.forEach(function(lazyImage) {\n      lazyImageObserver.observe(lazyImage);\n    });\n  }\n}\n\nconst inputImage = document.getElementById('inputImage');\nconst btnUpload = document.getElementById('btnUpload');\nconst preview = document.getElementById('preview');\nconst btnSend = document.getElementById('sendRequest');\nconst uploaderContainer = document.getElementById('uploader');\nconst resultImage = document.getElementById('result-img');\n\nbtnUpload.addEventListener('click', () => {\n  inputImage.click();\n});\n\nconst loader = document.querySelector('.loader');\nconst formData = new FormData();\n\ninputImage.addEventListener('change', () => {\n  const file = inputImage.files[0];\n  const reader = new FileReader();\n\n  reader.addEventListener('load', () => {\n    preview.innerHTML = `<img src=\"${reader.result}\" alt=\"Изображение\">`;\n    formData.append('image', reader.result);\n    uploaderContainer.classList.add('hidden');\n    preview.classList.add('visible');\n  });\n\n  if (file) {\n    reader.readAsDataURL(file);\n  }\n});\n\nconst sendImg = () => {\n  const checkboxes = document.querySelectorAll('input[type=checkbox]:checked');\n  const values = [];\n\n  checkboxes.forEach((checkbox) => {\n    values.push(checkbox.value);\n  });\n\n  loader.classList.add('visible');\n  formData.append('text', values);\n\n  fetch('https://api.deepai.org/api/image-editor', {\n      method: 'POST',\n      body: formData,\n      headers: {\n        'api-key': 'f7cd0d24-d07c-4416-ac17-019b78cfc83b',\n      }\n    })\n    .then(response => {\n      return response.json();\n    })\n    .then(data => {\n      if (data.output_url) {\n        const newImage = new Image();\n        newImage.src = data.output_url;\n        newImage.alt = 'Image';\n        newImage.id = 'img-load';\n\n        resultImage.classList.add('visible');\n        preview.classList.add('hidden');\n        resultImage.appendChild(newImage);\n      } else {\n        preview.classList.remove('visible');\n        btnUpload.classList.remove('hidden');\n      }\n    })\n    .catch(error => console.error(error))\n    .finally(() => {\n      loader.classList.remove('visible');\n    });\n};\n\nbtnSend.addEventListener('click', sendImg);\n\nconst loadImageButton = document.getElementById('load-image');\n\nloadImageButton.addEventListener('click', downloadImage);\n\nfunction downloadImage() {\n  const imageUrl = document.getElementById('img-load').getAttribute('src');\n  fetch(imageUrl)\n    .then(response => response.blob())\n    .then(blob => {\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.download = 'image.png';\n      link.href = url;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    });\n}\n\nwindow.addEventListener('load', () => {\n  lazy(); \n  mmenu();\n  accordionEvent();\n  customSelect();\n});\n\n//# sourceURL=webpack://akm/./src/assets/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/assets/js/app.js"]();
/******/ 	
/******/ })()
;